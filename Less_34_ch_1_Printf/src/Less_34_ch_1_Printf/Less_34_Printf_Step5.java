package Less_34_ch_1_Printf;
/*
Простые примеры форматирование вывода с помощью System.out.printf().
Особенность метода в том, что System.out.print() и System.out.println()
принимают один аргумент, а *.printf() может принимать несколько аргументов.
*/
public class Less_34_Printf_Step5 {
    public static void main(String[] args) {
        System.out.println("Результат деления без форматирования: " + 10000.0/3.0);
        // Ограничили вывод (округлили) до 2-ух знаков после запятой
        System.out.printf("%,.2f%n", 10000.0 / 3.0); // 3 333,33
        // Такой синтаксис превратит отрицательное число в число в скобках
        System.out.printf("%, (.2f%n", -10000.0 / 3.0); // (3 333,33)
        // С выводом знака '-'
        System.out.printf("%, .2f%n", -10000.0 / 3.0); // -3 333,33
        /*
        На все число вместе с запятой выделяется 9-ть символов из них:
        - 6-ть символов до запятой;
        - 2-а после запятой;
        - 1-н на запятую;
        При этом, поскольку, до запятой у нас только 4-и символа, а на
        данную область выделено 6-ть, то пустота заполняется '0'
        */
        System.out.printf("%09.2f%n", 10000.0 / 3.0); // 003333,33
    }
}

