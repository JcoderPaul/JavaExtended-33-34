******* Регулярные выражения и метасимволы, синтаксис - кратко. *******

Characters 	       | Matches
---------------------------------------------------------------------------------------
Символы
---------------------------------------------------------------------------------------
x                  | Символ х
\\                 | Символ обратной косой черты
\0n                | Символ с восьмеричным значением 0n (0 <= n <= 7)
\0nn               | Символ с восьмеричным значением 0nn (0 <= n <= 7)
\0mnn              | Символ с восьмеричным значением 0mnn (0 <= m <= 3, 0 <= n <= 7)
\xhh               | Символ с шестнадцатеричным значением 0xhh
\uhhhh             | Символ с шестнадцатеричным значением 0xhhhh
\x{h...h}          | Символ с шестнадцатеричным значением 0xh...h
                   | (Character.MIN_CODE_POINT <= 0xh...h <= Character.MAX_CODE_POINT)
                   |
\t                 | Символ табуляции ('\u0009')
\n                 | Символ новой строки (перевода строки) ('\u000A')
\r                 | Символ возврата каретки ('\u000D')
\f                 | Символ перевода страницы ('\u000C')
\a                 | Символ оповещения (звонка) ('\u0007')
\e                 | Экранирующий символ ('\u001B')
\cx                | Управляющий символ, соответствующий x
---------------------------------------------------------------------------------------
Композиция символов
---------------------------------------------------------------------------------------
[abc]              | Или a или b или c (простой класс)
[^abc]             | Любые символы кроме a, b, или c (отрицание)
[a-zA-Z]           | Любые символы [от a до z и от A до Z] т.е. диапазон включает (range)
[a-d[m-p]]         | Символы от a до d, или от m до p: или [a-dm-p] (объединение)
[a-z&&[def]]       | d, e, or f (пересечение)
[a-z&&[^bc]]       | Символы от a до z, кроме b и c: или [ad-z] (вычитание)
[a-z&&[^m-p]]      | Символы от a до z, и не от m до p: или [a-lq-z](вычитание)
---------------------------------------------------------------------------------------
Предопределенные классы символов
---------------------------------------------------------------------------------------
.                  | Любой символ (может совпадать или не совпадать с разделителями строк)
\d                 | Символ цифра: или [0-9]
\D                 | Символ не цифра: или [^0-9]
\s                 | Пробельный символ: или [ \t\n\x0B\f\r]
\S                 | Непробельный символ: или [^\s]
\w                 | Любой символ буква или цифра: или [a-zA-Z_0-9]
\W                 | Любой знак, отличный от буквы или цифры: или [^\w]
---------------------------------------------------------------------------------------
Определители границ
---------------------------------------------------------------------------------------
^                  | Начало строки
$                  | Конец строки
\b                 | Граница слова
\B                 | Граница без слов
\A                 | Начало ввода
\G                 | Конец предыдущего совпадения
\Z                 | Конец ввода, но для конечного терминатора, если он есть
\z                 | Конец ввода
---------------------------------------------------------------------------------------
Жадные квантификаторы
---------------------------------------------------------------------------------------
Х?                 | Х, один раз или ни разу
X*                 | X, ноль или более раз
X+                 | X, один или несколько раз
X{n}               | X, ровно n раз
X{n,}              | X, не менее n раз
X{n,m}             | X, не менее n, но не более m раз
---------------------------------------------------------------------------------------
Ленивые квантификаторы
---------------------------------------------------------------------------------------
X??                | Х, один раз или ни разу
X*?                | X, ноль или более раз
Х+?                | Х, один или несколько раз
Х{n}?              | Х, ровно n раз
Х {n,}?            | Х, не менее n раз
Х {n, m}?          | X, не менее n, но не более m раз
---------------------------------------------------------------------------------------
Сверхжадные квантификаторы
---------------------------------------------------------------------------------------
Х?+                | Х, один раз или ни разу
X*+                | X, ноль или более раз
X++                | X, один или несколько раз
X{n}+              | X, ровно n раз
X{n,}+             | X, не менее n раз
X{n,m}+            | X, не менее n, но не более m раз
---------------------------------------------------------------------------------------
Логические операторы
---------------------------------------------------------------------------------------
XY                 | X, за которым следует Y
X|Y                | Либо X, либо Y
(X)                | X, как захватывающая группа
---------------------------------------------------------------------------------------
Обратные ссылки
---------------------------------------------------------------------------------------
\n                 | Независимо от того, что соответствует n-й группе захвата
\k<name>           | Независимо от того, что совпадает с "name" именованной группы захвата
---------------------------------------------------------------------------------------
Цитата
---------------------------------------------------------------------------------------
\                  | Ничего, но заключает в кавычки следующий символ
\Q                 | Ничего, но заключает в кавычки все символы до \E
\E                 | Ничего, но заканчивает кавычки, начинающиеся с \Q
---------------------------------------------------------------------------------------

******* Обратная косая черта, экранирование и цитирование *******

Символ обратной косой черты ('\') служит для введения экранированных конструкций, как
определено в приведенной выше таблице, а также для заключения в кавычки символов, которые
в противном случае интерпретировались бы как неэкранированные конструкции. Таким образом,
выражение \\ соответствует одиночной обратной косой черте, а \{ соответствует левой
фигурной скобке.

Использование обратной косой черты перед любым буквенным символом, не обозначающим
экранированную конструкцию, является ошибкой; они зарезервированы для будущих расширений
языка регулярных выражений. Обратная косая черта может использоваться перед неалфавитным
символом независимо от того, является ли этот символ частью неэкранированной конструкции.

Обратная косая черта в строковых литералах в исходном коде Java интерпретируется в
соответствии с требованиями Спецификации языка Java™ либо как экранирование Unicode
(раздел 3.3), либо как экранирование других символов (раздел 3.10.6). Поэтому необходимо
использовать двойную обратную косую черту в строковых литералах, представляющих регулярные
выражения, чтобы защитить их от интерпретации компилятором байт-кода Java. Строковый
литерал "\b", например, соответствует одиночному символу возврата, когда он
интерпретируется как регулярное выражение, а "\\b" соответствует границе слова. Строковый
литерал "\(hello\)" недопустим и приводит к ошибке компиляции; для соответствия строке
(hello) необходимо использовать строковый литерал "\\(hello\\)".

******* Классы символов, группы символов *******

Классы символов могут появляться внутри других классов символов и могут состоять из
оператора объединения (неявного) и оператора пересечения (&&). Оператор объединения
обозначает класс, который содержит каждый символ, который находится по крайней мере
в одном из его классов операндов. Оператор пересечения обозначает класс, который
содержит каждый символ, который находится в обоих его классах операндов.

Приоритет операторов символьного класса следующий, от высшего к низшему:
1. Символьное исключение \x
2. Группировка [...]
3. Диапазон a-z
4. Объединение [a-e][i-u]
5. Пересечение [a-z&&[aeiou]]

Нужно помнить, что внутри класса символов действует другой набор метасимволов, чем вне
класса символов. Например, регулярное выражение '.' теряет свое особое значение внутри
класса символов, а выражение '-' становится метасимволом, формирующим диапазон.

******* Ограничители линии *******

Ограничитель строки — это последовательность из одного или двух символов, которая отмечает
конец строки вводимой последовательности символов. Следующее признается ограничителем строки:

- Символ новой строки (перевода строки) ('\n'),
- Символ возврата каретки, за которым сразу следует символ новой строки ("\r\n"),
- Отдельный символ возврата каретки ('\r'),
- Символ следующей строки ('\u0085'),
- Символ-разделитель строк ('\u2028') или
- Символ-разделитель абзаца ('\u2029).

Если режим UNIX_LINES активирован, то единственными распознаваемыми разделителями строк являются
символы новой строки.

Регулярное выражение '.' соответствует любому символу, кроме символа конца строки, если не указан
флаг DOTALL. По умолчанию регулярные выражения '^' и '$' игнорируют разделители строк и соответствуют
только началу и концу всей входной последовательности соответственно. Если режим MULTILINE активирован,
то '^' соответствует началу ввода и после любого знака конца строки, за исключением конца ввода.
В режиме MULTILINE символ '$' совпадает непосредственно перед знаком конца строки или концом входной
последовательности.

******* Нумерация групп *******

Группы захвата нумеруются путем подсчета их открывающих скобок слева направо. В выражении ((A)(B(C))),
например, таких групп четыре:
1. ((А)(В(С)))
2. (А)
3. (B(С))
4. (С)
Нулевая группа всегда обозначает все выражение.
Группы захвата названы так потому, что во время совпадения сохраняется каждая подпоследовательность
входной последовательности, которая соответствует такой группе. Захваченная подпоследовательность
может быть использована позже в выражении через обратную ссылку, а также может быть извлечена из
сопоставителя после завершения операции сопоставления.

------------------------------------------------------------------------------------------
Более подробно: https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html