package Less_33_ch_4_RegExExample;
/*
Задача:
Определить попадает ли введенный IP в требуемый диапазон:
0-255.0-255.0-255.0-255
*/
import java.util.regex.Pattern;

public class Less_33_Example_CorrectIP {

    public static void main(String[] args) {
        String ip_for_test_1 = "194.156.67.91";
        String ip_for_test_2 = "194.256.167.191";
        Less_33_Example_CorrectIP ipTester = new Less_33_Example_CorrectIP();

        ipTester.CheckIp(ip_for_test_1);
        ipTester.CheckIp(ip_for_test_2);
    }

    void CheckIp(String test_ip){
        /*
        Проверяем правильность введенного IP адреса.
        Нам нужно, чтобы каждый блок находился в пределах от 0 - 255,
        всего таких блока 4 - и, и три из них находятся до знака 'точка'.
        В приведенном регулярном выражении:
        Диапазон 1. 25[0-5] - может дать выборку (диапазон) 250 - 255
        Диапазон 2. 2[0-4]\d - может дать выборку (диапазон) 200 - 249
        Диапазон 3. [01]?\d?\d - может дать выборку (диапазон) 0 - 199
        они разделены знаком 'или' и объеденины в общий 'захват' - круглые
        скобки, т.е. или, диапазон 1 или, диапазон 2 или, диапазон 3. При
        этом каждый диапазон заканчивается на '.' и имеет 3-и повторения
        подряд.
        Еще один блок имеет точно такой же RegEx синтаксис, как и предыдущие
        три, но не заканчивается на точку.
        И того, мы имеем регулярку для проверки: 0-255.0-255.0-255.0-255
        */
        String regex_for_ip_test = "((25[0-5]|2[0-4]\\d|[01]?\\d?\\d)(\\.)){3}" +
                                   "(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)";
        System.out.println(test_ip + " ip is correct? " + Pattern.matches(regex_for_ip_test, test_ip));
    }
}
